<?php/** * 面料下单 刺绣信息格式化 * @param $data			刺绣信息 * @param $font			字体 * @param $color		颜色 * @param $location		位置 * @param $content		内容 */function _format_embs($data,&$font,&$color,&$location,&$content){	if(isset($data['-1'])){		$content = $data['-1'];		unset($data['-1']);	}	$dict_ids = array_keys($data);	if($dict_ids){		$sql = "SELECT * FROM `cf_fdiy_management` WHERE `cate_id` IN ('".implode(array_unique($dict_ids), "','")."')";		$dicts = getAlls($sql);		foreach((array)$dicts as $k=>$v){			if(isset($data[$v['cate_id']])){				if('颜色' == $v['cate_name']){					$color = $data[$v['cate_id']];				}				if('位置' == $v['cate_name']){					foreach($data[$v['cate_id']] as $lemv){						$location[] = $lemv;					}				}				if('字体' == $v['cate_name']){					$font = $data[$v['cate_id']];				}			}		}	}}/** * 执行字符串搜索 从a 到 c 去b * @param sing $str                检索的字符串 * @param sing $findStart       开始的字符 * @param sing $findEnd           结束的字符 * @param sing $encoding          编码 * @return Ambigous <boolean, string>|boolean|string */function strCutByStr(&$str, $findStart, $findEnd = false, $encoding = 'utf-8'){	if(is_array($findStart)){		if(count($findStart) === count($findEnd)){			foreach($findStart as $k => $v){				if(($result = strCutByStr($str, $v, $findEnd[$k], $encoding)) !== false){					return $result;				}			}			return false;		}else{			return false;		}	}	if(($start = mb_strpos($str, $findStart, 0, $encoding)) === false){		return false;	}	$start += mb_strlen($findStart, $encoding);	if($findEnd === false){		return mb_substr($str, $start, NULL, $encoding);	}	if(($length = mb_strpos($str, $findEnd, $start, $encoding)) === false){		return false;	}	return mb_substr($str, $start, $length - $start, $encoding);}/** *  xml 转换成 array 重点是过滤 array(0)的现象 *  json_decode(json_encode((array) simplexml_load_string($xml)), 1); * @param SimpleXMLElement $xml * @return multitype: */function XML2Array(SimpleXMLElement $parent){	$array = array();	foreach ($parent as $name => $element) {		($node = & $array[$name])		&& (1 === count($node) ? $node = array($node) : 1)		&& $node = & $node[];		$node = $element->count() ? XML2Array($element) : trim($element);	}	return $array;}//更新数据时，格式化数据function parseSet($data) {	foreach ($data as $key=>$val){		if(is_scalar($val)){ // 过滤非标量数据			$value   =  parseValue($val);			$set[]    =  "`".$key.'`='.$value;		}else{			$value   =  parseValue($val[0]);			$set[]    =  "`".$key.'`='."`$key` + " .$value;		}	}	return ' SET '.implode(',',$set);}//给值添加单引号，防止SQL注入,数字是不需要添加的，字符串需要添加function parseValue($value) {	if(is_string($value)) {		$value = '\''. $value.'\'';	}elseif(is_null($value)){		$value   =  'null';	}	return $value;}function update($data , $where , $table = '' ) {	mysql_query("SET NAMES 'UTF8';");	$data = parseSet($data);	$sql = "update `" . $table . "`" .  $data . " where " . $where;	return $sql;}function initDb(){// 	chdir(dirname(__FILE__));// cd 到php脚本所在的目录   // $data = include "../data/config.inc.php";    $data = include dirname(dirname(__FILE__))."/data/config.inc.php";    $cfg = parse_url($data['DB_CONFIG']);    $cfg['path'] = str_replace('/', '', $cfg['path']);	$conn = mysql_connect($cfg['host'].':'.$cfg['port'],$cfg['user'] ,$cfg['pass'] );	mysql_select_db($cfg['path'],$conn);}function getAll($sql){	mysql_query("SET NAMES 'gb2312';");	$res = mysql_query($sql);	if(!$res)		return 0;		$rs = getDbAll($res);	return $rs;}function getAlls($sql){    mysql_query("SET NAMES 'utf8';");    $res = mysql_query($sql);    if(!$res)        return 0;    $rs = getDbAll($res);    return $rs;}function getDbAll($db_res) {	$result = array();	if($db_res) {		while($row = mysql_fetch_assoc($db_res)){			$result[]   =   $row;		}	}	return $result;}function curl_get_ssl($url){	$cfg = include "../data/config.inc.php";	$ch = curl_init();	//	curl_setopt($ch,CURLOPT_VERBOSE,'1');//请求过程中，输出~<请求头><返回头>等详细信息	curl_setopt($ch,CURLOPT_TIMEOUT,30); 	curl_setopt($ch,CURLOPT_RETURNTRANSFER, 1);//1:返回所有值，0：只返回真假	curl_setopt($ch,CURLOPT_URL,$url);	curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,false);	curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,false);	curl_setopt($ch,CURLOPT_SSLCERTTYPE,'PEM');	curl_setopt($ch,CURLOPT_SSLCERT,$cfg['PEM_PATH'].'public.pem');	curl_setopt($ch,CURLOPT_SSLKEYTYPE,'PEM');	curl_setopt($ch,CURLOPT_SSLKEY,$cfg['PEM_PATH'].'key.pem');	$aHeader = array("user:ALITAILOR", "pwd:". md5("ALITAILOR"));	curl_setopt($ch, CURLOPT_HTTPHEADER, $aHeader);	$data = curl_exec($ch);	if (curl_error($ch)){        $rs = array('err'=>1,'msg'=>"curl error:".curl_error($ch) );//-1:代表CURL请求过程中的错误~    }else{        $rs = array('err'=>0,'data'=>$data);        }	return $rs;}function curl_post_ssl($url,$vars){	$cfg = include "../data/config.inc.php";// 	echo $cfg['PEM_PATH'].'public.pem'."\r\n";// 	echo $cfg['PEM_PATH'].'key.pem'."\r\n";// 	exit();	$ch = curl_init();	//curl_setopt($ch,CURLOPT_VERBOSE,'1');	curl_setopt($ch,CURLOPT_TIMEOUT,30);	curl_setopt($ch,CURLOPT_RETURNTRANSFER, 1);	curl_setopt($ch,CURLOPT_URL,$url);	curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,false);	curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,false);// 	curl_setopt($ch,CURLOPT_SSLCERTTYPE,'PEM');// 	curl_setopt($ch,CURLOPT_SSLCERT,$cfg['PEM_PATH'].'public.pem');	// 	curl_setopt($ch,CURLOPT_SSLKEYTYPE,'PEM');// 	curl_setopt($ch,CURLOPT_SSLKEY,$cfg['PEM_PATH'].'key.pem');	$aHeader = array(			"user:QC2C", 			"pwd:". md5("369147"),			//'xml:1',			'lan:zh',			//'Content-Type: text/xml; charset=utf-8',            'Content-Type:application/xml',	);	curl_setopt($ch, CURLOPT_HTTPHEADER, $aHeader);	curl_setopt($ch,CURLOPT_POST, 1);	curl_setopt($ch,CURLOPT_POSTFIELDS,$vars);		$data = curl_exec($ch);	if (curl_error($ch)){		$rs = array('err'=>1,'msg'=>"curl error:".curl_error($ch) );//-1:代表CURL请求过程中的错误~	}else{		$rs = array('err'=>0,'data'=>json_decode($data,1));	}	//print_R($rs);	    curl_close($ch);     //echo iconv("UTF-8","GBK", $data);	 echo $data;     echo "\r\n";	return $rs;	}function _format_cloth($id){	$arr = array(			1 => '0001',			2 => '0002',			3 => '0003',			2000 => '0004',			4000 => '0005',			3000 => '0006',			6000 => '0007',			5000 => '0008',			4 => '0009',			90000 => '0010',			5 => '0013',			6 => '0014',			7 => '0015',			15000 => '0017',			18000 => '0018',			19 => '0019',			100000 => '0020',			103000 => '0021', 	//女大衣			98000 => '0012', 	//女西裤			95000 => '0011', 	//女西服			11000 => '0016', 	//女衬衣			222000 => '0037',	//女马甲			130000 => '0032',	//女西裙			//110000 //小童西服			//113000  //小童西裤	);	$data = array_flip($arr);	if (isset($data[$id]))        if($id == '0037'){            return 3;        }		return $data[$id];	return false;}/** * array_column()函数兼容低版本 * * 获取二维数组中的元素 * * @return void * @version 1.0.0 (2014-22-22) * @author Xiao5 */function i_array_column($input, $columnKey, $indexKey = null){	if (! function_exists('array_column')) {		$columnKeyIsNumber = (is_numeric($columnKey)) ? true : false;		$indexKeyIsNull = (is_null($indexKey)) ? true : false;		$indexKeyIsNumber = (is_numeric($indexKey)) ? true : false;		$result = array();		foreach ((array) $input as $key => $row) {			if ($columnKeyIsNumber) {				$tmp = array_slice($row, $columnKey, 1);				$tmp = (is_array($tmp) && ! empty($tmp)) ? current($tmp) : null;			} else {				$tmp = isset($row[$columnKey]) ? $row[$columnKey] : null;			}			if (! $indexKeyIsNull) {				if ($indexKeyIsNumber) {					$key = array_slice($row, $indexKey, 1);					$key = (is_array($key) && ! empty($key)) ? current($key) : null;					$key = is_null($key) ? 0 : $key;				} else {					$key = isset($row[$indexKey]) ? $row[$indexKey] : 0;				}			}			$result[$key] = $tmp;		}		return $result;	} else {		return array_column($input, $columnKey, $indexKey);	}}function getSizeData($clothId,$sizeAreaID='10205',$paramsData){	/* 亚码：10202 红领：10205 */	$sizeAreaID     = '10205';	$filename = 'size_json/'.$clothId.'_'.$sizeAreaID.'.size.json';	if ($clothId == '0006' || $clothId == '0016'){		$dfLength = array(11002=>array(11003,11004),3027=>array(3028,3029));		foreach ($dfLength as $k=>$v){			if (isset($paramsData[$k]) && in_array($paramsData[$k], $v)){				$filename = 'size_json/'.$clothId.'_'.$sizeAreaID.'_'.$paramsData[$k].'.size.json';			}		}	}	$jsonString = file_get_contents($filename);	$jsonData = json_decode($jsonString,true);	return $jsonData;}function getAreaID($clothId){	$sizeAreaID     = '10205';	if($clothId == '0032'){		/* 女西裙(亚码客户指定号型)：10206 */		$sizeAreaID     = '10206';	}	return $sizeAreaID;}function getShortMark($clothId,$paramsData){	$m = '';// 	if ($clothId == '0006' || $clothId == '0016'){// 		$dfLength = array(11002=>array(11003,11004),3027=>array(3028,3029));// 		foreach ($dfLength as $k=>$v){// 			if (isset($paramsData[$k]) && in_array($paramsData[$k], $v)){// 				if (11004 == $paramsData[$k] || 3029 == $paramsData[$k]){// 					$m = 'dx';// 					break;// 				}// 			}// 		}// 	}	return $m;	}function getSpecifyFabric($fabric) {	$def =  array(			'SAK342A' => 'SDA071A',			'SAP041A' => 'SDA285A',			'SAI027A' => 'SDA296A',			'SAN426A' => 'SDA297A',			'SAP011A' => 'SDA298A',			'SAL210A' => 'SDA299A',			'SAN382A' => 'SDA300A',			'SAP055A' => 'SDA301A',			'SAK117A' => 'SDA114A',			'SAI274A' => 'SDA200A',			'SAN453A' => 'SDA302A',			'SAQ080A' => 'SDA303A',			'SAQ082A' => 'SDA304A',			'SAP719A' => 'SDA305A',			'SAK118A' => 'SDA115A',			'SAQ040A' => 'SDA306A',			'SAK427A' => 'SDA096A',			'SAP103A' => 'SDA307A',			'SAN427A' => 'SDA308A',			'SAN455A' => 'SDA309A',			'SAQ004A' => 'SDA310A',			'SAN456A' => 'SDA311A',			'SAM049A' => 'SDA074A',			'SAN183A' => 'SDA312A',			'SAN184A' => 'SDA313A',			'SAN182A' => 'SDA314A',			'SAM087A' => 'SDA315A',			'SAP042A' => 'SDA316A',			'SAI237A' => 'SDA156A',			'SAP614A' => 'SDA317A',			'SAP613A' => 'SDA318A',			'SAM125A' => 'SDA176A',			'SAN303A' => 'SDA319A',			'SAN038A' => 'SDA224A',			'SAN187A' => 'SDA286A',			'SAN188A' => 'SDA320A',			'SAP017A' => 'SDA321A',			'SAL173A' => 'SDA322A',			'SAP043A' => 'SDA287A',			'SAP777A' => 'SDA323A',			'SAP038A' => 'SDA292A',			'SAM706A' => 'SDA324A',			'SAM705A' => 'SDA325A',			'SAN123A' => 'SDA326A',			'SAP095A' => 'SDA327A',			'SAP102A' => 'SDA328A',			'SAP096A' => 'SDA329A',			'SAQ057A' => 'SDA330A',			'SAK567A' => 'SDA076A',			'SAP044A' => 'SDA331A',			'SBN081A' => 'SDA334A',			'SAK125A' => 'SDA112A',			'SAK126A' => 'SDA113A',			'SAM212A' => 'SDA338A',			'SAK066A' => 'SDA072A',			'SAQ036A' => 'SDA342A',			'SAQ047A'=>'SDA343A',			'SAN123A'=>'SDA326A',			'SAQ050A'=>'SDA341A',			'SAP630A'=>'SDA344A',			'SAP631A'=>'SDA345A',			'SAQ062A'=>'SDA346A',			'SAP633A'=>'SDA348A',     'SAQ056A' => 'SDA355A',     'SAQ069A' => 'SDA357A',     'SAQ049A' => 'SDA358A',     'SAM501A' => 'SDA359A',     'SAP640A' => 'SDA360A',     'SAP625A' => 'SDA361A',     'SAN306A' => 'SDA362A',     'SAQ046A' => 'SDA363A',			);		return isset($def[$fabric]) ? $def[$fabric] : $fabric;	}/*短信发送*/function SendSms($phone, $msg) {    $err = array('-1'=>'传递参数错误','-2'=>'用户id或密码错误','-3'=>'通道id错误','-4'=>'手机号码错误','-5'=>'短信内容错误','-6'=>'余额不足错误=','-7'=>'绑定ip错误',        '-8'=>'未带签名','-9'=>'签名字数不对','-10'=>'通道暂停','-11'=>'该时间禁止发送','-12'=>'时间戳错误','-13'=>'编码异常','-4'=>'发送被限制');    //获得配置项    //$conf = include ROOT_PATH.'/data/settings.inc.php';//获得配置信息    //$user_id   = $conf['msg_pid']; // sms9平台用户id    //$pass      = $conf['msg_key']; // 用户密码    //$channelid = $conf['channelid']; // 发送频道id    //后台无配置地方，暂时写死--    $timestamp = time();    $channelid = 12852 ; // 发送频道id    $cpid = 11664;    $ps = md5("mfd123_".$timestamp."_topsky");    $msg = iconv("UTF-8",'gbk//ignore',$msg);    $url = "http://admin.sms9.net/houtai/sms.php?cpid={$cpid}&password={$ps}&channelid={$channelid}&tele={$phone}&timestamp={$timestamp}&msg={$msg}";    $rs = file_get_contents($url);    //$back = substr($rs,6);    $pre = substr($rs,0,7);    if($pre != 'success') {        return false;    }    return true;}